// automatically generated by Xtext
grammar co.classlayout2frontend.c2fdsl.C2fDSL with org.eclipse.xtext.common.Terminals

import "http://www.classlayout2frontend.com/classLayout2Frontend" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Project returns Project:
	{Project}
	BRACESOPEN
	'name' COLON name=EString COMMA
	'entityModel' COLON entitiesmodel=EntitiesModel COMMA
	'site' COLON siteViews+=SiteView COMMA
	'pages' COLON BRACKETSO pageViews+=PageView ( COMMA pageViews+=PageView)* BRACKETSC
	'components' COLON BRACKETSO containerViews+=ContainerView ( COMMA containerViews+=ContainerView)* BRACKETSC
	BRACESCLOSE;

ContainerView returns ContainerView:
	StaticContainer | IterationContainer | InputForm;

EntityModelElement returns EntityModelElement:
	Entity | PrimitiveType | Enumeration;

ElementView returns ElementView:
	Autocomplete | Dropdownlist | Image | List | InputText | StaticContainer | TextArea | IterationContainer | InputForm | RadioButtonGroup;

PropertyType returns PropertyType:
	PrimitiveType | Enumeration;
	
Output returns Output:
	TextArea | Image;

AtomicView returns AtomicView:
	Dropdownlist | List | InputText| TextArea | RadioButtonGroup;

StructuralFeature returns StructuralFeature:
	Composition | Property | Reference;

Input returns Input:
	Autocomplete | Dropdownlist | List | InputText | CheckList | RadioButtonGroup;

EString returns ecore::EString:
	STRING | ID;

EntitiesModel returns EntitiesModel:
	{EntitiesModel}
	BRACESOPEN
		'name' COLON name=EString COMMA
		'elements' COLON BRACKETSO modelElements+=EntityModelElement ( COMMA modelElements+=EntityModelElement)* BRACKETSC
	BRACESCLOSE;

SiteView returns SiteView:
	{SiteView}
	BRACESOPEN
		'name' COLON name=EString COMMA
		('templateColor' COLON templateColor=EString COMMA)?
		'displayName' COLON displayName=EString COMMA
	BRACESCLOSE;

PageView returns PageView:
	{PageView}
	BRACESOPEN
		'name' COLON name=EString COMMA
		'layoutType' COLON layoutType=LayoutType COMMA
		'elementViews' COLON BRACKETSO elementViews+=[ElementView|EString] ( COMMA elementViews+=[ElementView|EString])* BRACKETSC 
	BRACESCLOSE;

Composition returns Composition:
	BRACESOPEN
		'composition' COLON name=EString COMMA
		('required' COLON required=EBoolean COMMA)?
		('many' COLON many=EBoolean COMMA)?
		('description' description=EString)?
		('displayName' displayName=EString)?
		'target' COLON target=[Entity|EString]
	BRACESCLOSE;

Property returns Property:	
	BRACESOPEN
		'property' COLON name=EString COMMA
		('description' COLON description=EString COMMA)?
		('displayName' COLON displayName=EString COMMA)?
		('defaultValue' COLON defaultValue=EString COMMA)?
		('required' COLON required=EBoolean COMMA)?
		'dataType' COLON type=[PropertyType|EString]
	BRACESCLOSE;

Entity returns Entity:
	{Entity}
	BRACESOPEN
		'class' COLON name=EString COMMA
		('description' COLON description=EString COMMA)?
		('displayName' COLON displayName=EString COMMA)?
		('superclass' superclass=[Entity|EString] COMMA)?
		'elements' COLON BRACKETSO structuralFeatures+=StructuralFeature ( COMMA structuralFeatures+=StructuralFeature)* BRACKETSC 
	BRACESCLOSE;

PrimitiveType returns PrimitiveType:
	{PrimitiveType}
	BRACESOPEN
		'primitive' COLON name=EString
	BRACESCLOSE;

Literal returns Literal:
	BRACESOPEN
		'name' COLON name=EString COMMA
		'value' value=EInt
	BRACESCLOSE;

Enumeration returns Enumeration:
	{Enumeration}
	BRACESOPEN
		'enum' COLON name=EString COMMA
		('description' COLON description=EString COMMA)?
		('displayName' COLON displayName=EString COMMA)?
		'literals' BRACKETSO literals+=Literal ( COMMA literals+=Literal)* BRACKETSC
	BRACESCLOSE;

Reference returns Reference:
	BRACESOPEN
		'reference' COLON name=EString COMMA
		('required' COLON required=EBoolean COMMA)?
		('many' COLON many=EBoolean COMMA)?
		('description' COLON description=EString COMMA)?
		('displayName' COLON displayName=EString COMMA)?
		'target' COLON target=[Entity|EString]
	BRACESCLOSE;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

EInt returns ecore::EInt:
	'-'? INT;

enum LayoutType returns LayoutType:
	SINGLE_COLUMN = 'SINGLE_COLUMN' | TWO_COLUMNS = 'TWO_COLUMNS' | LEFT_BAR = 'LEFT_BAR' | RIGHT_BAR = 'RIGHT_BAR' | THREE_COLUMNS = 'THREE_COLUMNS';

Autocomplete returns Autocomplete:
	{Autocomplete}
	BRACESOPEN
	    'name' COLON name=EString COMMA
		'multiple' COLON multiple=EBoolean COMMA
		('displayName' displayName=EString COMMA)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

Dropdownlist returns Dropdownlist:
	{Dropdownlist}
	'Dropdownlist'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

Image returns Image:
	{Image}	
	BRACESOPEN
		'image' COLON name=EString
		('displayName' displayName=EString)?
		('description' description=EString)?
		('width' width=EDouble)?
		('height' height=EDouble)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

List returns List:
	{List}
	(multiple?='multiple')?
	'List'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

InputText returns InputText:
	{InputText}
	(multiline?='multiline')?
	'InputText'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

StaticContainer returns StaticContainer:
	{StaticContainer}
	BRACESOPEN
		'name' COLON name=EString COMMA
		('displayName' displayName=EString)?
		('description' description=EString)?
		('entity' entity=[Entity|EString])?
		('elements' BRACKETSO elements+=ElementView ( COMMA elements+=ElementView)* BRACKETSC )?
	BRACESCLOSE;

TextArea returns TextArea:
	{TextArea}
	'TextArea'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('value' value=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

IterationContainer returns IterationContainer:
	{IterationContainer}
	name=EString
	BRACESOPEN
		'containerType' COLON 'iteration' COMMA
		('displayName' COLON displayName=EString)?
		('description' COLON description=EString)?
		('entity' COLON entity=[Entity|EString])?
		('elements' BRACESOPEN elements+=ElementView ( COMMA elements+=ElementView)* BRACESCLOSE )?
		('iterationFilters' BRACESOPEN iterationFilters+=IterationFilter ( COMMA iterationFilters+=IterationFilter)* BRACESCLOSE )?
	BRACESCLOSE;

InputForm returns InputForm:
	{InputForm}
	'InputForm'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('entity' entity=[Entity|EString])?
		('elements' BRACESOPEN elements+=ElementView ( COMMA elements+=ElementView)* BRACESCLOSE )?
	BRACESCLOSE;

CheckList returns CheckList:
	{CheckList}
	'CheckList'
	name=EString
	BRACESOPEN
		('displayName' displayName=EString)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

RadioButtonGroup returns RadioButtonGroup:
	{RadioButtonGroup}	
	BRACESOPEN
		'radio' COLON name=EString COMMA
		('displayName' COLON displayName=EString COMMA)?
		('description' COLON description=EString COMMA)?
		('label' COLON label=EString COMMA)?
		'property' property=[StructuralFeature|EString]
	BRACESCLOSE;

FileUpload returns FileUpload:
	{FileUpload}
	BRACESOPEN
		'name' COLON name=EString COMMA
		('displayName' displayName=EString)?
		('description' description=EString)?
		('label' label=EString)?
		('property' property=[StructuralFeature|EString])?
	BRACESCLOSE;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

IterationFilter returns IterationFilter:
	{IterationFilter}
	'IterationFilter'
	BRACESOPEN
		('input' input=[Input|EString])?
	BRACESCLOSE;

	
terminal BRACESOPEN:
"{";
 
terminal BRACESCLOSE:
"}";

terminal BRACKETSO:
"[";
 
terminal BRACKETSC:
"]";

terminal COLON: 
":";
 
terminal COMMA:
",";

terminal QUOTE :
'"';